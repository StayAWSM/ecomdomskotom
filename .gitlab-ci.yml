image: python:3.9-bullseye      # в какой среде будет выполнятся ямл

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - validate
#  - test
#  - deploy

variables:
  # DJANGO_CONFIG: "test"
  MYSQL_DATABASE: $MYSQL_DB
  MYSQL_ROOT_PASSWORD: $MYSQL_PASS
  MYSQL_USER: $MYSQL_USER
  MYSQL_PASSWORD: $MYSQL_PASS


default:
  cache:
    key:
      files:
        - requirements.txt
    paths:
      - .venv     # The directory where the commands will be executed / из какой директории будут выполнены команды
  before_script:
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip3 install --upgrade pip
    - pip3 install --upgrade setuptools
    - pip3 install -r requirements.txt

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
    - ls
    - uname -a

migrations:
  services:
    - postgres:latest
  stage: build
  script:
    - echo -e "SECRET_KEY = 'not so sectret!'\n" > ./_project_/settings_local.py
    - python3 manage.py makemigrations
    # - python3 manage.py makemigrations myapp
    - python3 manage.py migrate
    - python3 manage.py check
    - python3 manage.py runserver 8000


lint:
  stage: validate
  script:
    - prospector --profile-path . --profile .prospector.yaml .
#    - prospector

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - pytest
    - echo "Code coverage is 90%"
#
#lint-test-job:   # This job also runs in the test stage.
#  stage: test    # It can run at the same time as unit-test-job (in parallel).
#  script:
#    - echo "Linting code... This will take about 10 seconds."
##    - sleep 10
#    - echo "No lint issues found."
#
#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  environment: production
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."
